from BackEnd.Data.base import StringEnum

API_KEY = "CRU63X7J4COJ46F2"


class AlphaVantage:
    quarterly_reports_dict = "quarterlyReports"
    symbol = "1. symbol"
    currency = "8. currency"
    region = "4. region"
    best_matches = "bestMatches"
    time_series_dict = "Time Series (Daily)"
    quarterly_earnings_dict = "quarterlyEarnings"
    feed = "feed"
    data = "data"
    sma = "Technical Analysis: SMA"
    ema = "Technical Analysis: EMA"
    rsi = "Technical Analysis: RSI"
    bbands = "Technical Analysis: BBANDS"
    adx = "Technical Analysis: ADX"

class Finance:
    fiscal_dates = "fiscalDateEnding"
    report_dates = "reportedDate"
    total_revenue = "totalRevenue"
    profit = "netIncome"
    symbol = "Symbol"
    name = "Name"
    description = "Description"
    year_high = "52WeekHigh"
    year_low = "52WeekLow"
    open = "Open"
    high = "High"
    low = "Low"
    non_adjust_close = "NonAdjustClose"
    close = "Close"
    volume = "Volume"
    dividend = "Dividend"
    split = "Split"
    operating_cash_flow = "operatingCashflow"
    from_investment_cash_flow = "cashflowFromInvestment"
    from_financing_cash_flow = "cashflowFromFinancing"
    reported_eps = "reportedEPS"
    estimated_eps = "estimatedEPS"
    surprise_percentage = "surprisePercentage"
    date = "Date"
    market_cap = "MarketCapitalization"
    forecast = "Forecast"
    PPE = "pricePerEarnings"
    ticker_1_data = "ticker_1_data"
    ticker_2_data = "ticker_2_data"
    comparison = "comparison"

class MicroEconomic:
    real_gdp = "Real GDP"
    real_gdp_date = "Real GDP Date"
    cpi = "Cpi"
    cpi_date = "Cpi Date"
    inflation = "Inflation"
    inflation_date = "Inflation Date"
    interest_rates = "Interest Rates"
    interest_rates_date = "Interest Rates Date"
    retail_sales = "Retail Sales"
    retail_sales_date = "Retail Sales Date"
    unemployment_rate = "Unemployment Rate"
    unemployment_rate_date = "Unemployment Rate Date"

class TechnicalIndicators:
    sma = "Sma"
    ema = "Ema"
    rsi = "Rsi"
    bbands_lower = "Lower Band"
    bbands_upper = "Upper Band"
    bbands_middle = "Middle Band"
    adx = "Adx"

class AllowedOrientations(StringEnum):
    index = "index"
    columns = "columns"

class Inequality(StringEnum):
    lt = "<"
    lt_equal_to = "<="
    gt = ">"
    gt_equal_to = ">="
    equal = "="
